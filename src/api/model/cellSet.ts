/**
 * Fleet API Specification
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * The version of the OpenAPI document: 2.2.8
 * Contact: support@keytelematics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CellSetAverage } from './cellSetAverage';
import { CellSetFilters } from './cellSetFilters';
import { CellValue } from './cellValue';

export class CellSet {
    'rowLevels': number;
    'filters': CellSetFilters;
    'average'?: CellSetAverage;
    'cellset': Array<Array<CellValue>>;
    'status': CellSet.StatusEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "rowLevels",
            "baseName": "rowLevels",
            "type": "number"
        },
        {
            "name": "filters",
            "baseName": "filters",
            "type": "CellSetFilters"
        },
        {
            "name": "average",
            "baseName": "average",
            "type": "CellSetAverage"
        },
        {
            "name": "cellset",
            "baseName": "cellset",
            "type": "Array<Array<CellValue>>"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "CellSet.StatusEnum"
        }    ];

    static getAttributeTypeMap() {
        return CellSet.attributeTypeMap;
    }
}

export namespace CellSet {
    export enum StatusEnum {
        Error = <any> 'error',
        Running = <any> 'running',
        Generating = <any> 'generating',
        Completed = <any> 'completed'
    }
}
