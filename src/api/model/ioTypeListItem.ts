/**
 * Fleet API Specification
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * The version of the OpenAPI document: 2.2.8
 * Contact: support@keytelematics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IdName } from './idName';
import { IdNameType } from './idNameType';
import { IoTypeRateConfig } from './ioTypeRateConfig';
import { IoTypeTextConfig } from './ioTypeTextConfig';

export class IoTypeListItem {
    /**
    * The unique UUID of this entity
    */
    'id': string;
    'owner': IdNameType;
    /**
    * A unique name for this entity
    */
    'name'?: string | null;
    /**
    * The current state of this entity
    */
    'state'?: IoTypeListItem.StateEnum;
    /**
    * The type of the IO type
    */
    'type'?: IoTypeListItem.TypeEnum;
    /**
    * Optional units that this I/O type is measured in
    */
    'unit'?: string | null;
    /**
    * The type of smoothing to apply to this input
    */
    'smoothingType'?: IoTypeListItem.SmoothingTypeEnum;
    'text'?: IoTypeTextConfig;
    'rate'?: IoTypeRateConfig;
    /**
    * A dictionary of lookup values. Only relevant for \"value_input\" types.
    */
    'lookups'?: Array<IdName> | null;
    /**
    * The date the entity was last modified
    */
    'modifiedDate': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "IdNameType"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "IoTypeListItem.StateEnum"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "IoTypeListItem.TypeEnum"
        },
        {
            "name": "unit",
            "baseName": "unit",
            "type": "string"
        },
        {
            "name": "smoothingType",
            "baseName": "smoothingType",
            "type": "IoTypeListItem.SmoothingTypeEnum"
        },
        {
            "name": "text",
            "baseName": "text",
            "type": "IoTypeTextConfig"
        },
        {
            "name": "rate",
            "baseName": "rate",
            "type": "IoTypeRateConfig"
        },
        {
            "name": "lookups",
            "baseName": "lookups",
            "type": "Array<IdName>"
        },
        {
            "name": "modifiedDate",
            "baseName": "modifiedDate",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return IoTypeListItem.attributeTypeMap;
    }
}

export namespace IoTypeListItem {
    export enum StateEnum {
        Active = <any> 'active',
        Deleted = <any> 'deleted'
    }
    export enum TypeEnum {
        DigitalInput = <any> 'digital_input',
        DigitalOutput = <any> 'digital_output',
        AnalogInput = <any> 'analog_input',
        TemperatureInput = <any> 'temperature_input',
        CanInput = <any> 'can_input',
        CounterInput = <any> 'counter_input',
        CameraInput = <any> 'camera_input',
        ValueInput = <any> 'value_input'
    }
    export enum SmoothingTypeEnum {
        None = <any> 'none',
        MovingAverage5 = <any> 'moving_average_5',
        MovingAverage10 = <any> 'moving_average_10',
        MovingAverage20 = <any> 'moving_average_20',
        MovingAverage50 = <any> 'moving_average_50',
        MovingAverage100 = <any> 'moving_average_100',
        MovingAverage200 = <any> 'moving_average_200'
    }
}
