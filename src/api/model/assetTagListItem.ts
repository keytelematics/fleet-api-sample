/**
 * Fleet API Specification
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * The version of the OpenAPI document: 2.2.8
 * Contact: support@keytelematics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IdName } from './idName';

export class AssetTagListItem {
    /**
    * The unique UUID for this Asset Tag
    */
    'id': string;
    'owner': IdName;
    /**
    * The serial number of the Asset Tag that is used to uniquely identify it.
    */
    'name': string;
    /**
    * The serial number of the Asset Tag that is used to uniquely identify it.
    */
    'serialNumber': string;
    'assetTagType': IdName;
    /**
    * The asset tag operation mode. Options are \'movable\' for movable assets, \'fixed\' for fixed assets and \'stock\' for temporary stock control uses.
    */
    'mode': AssetTagListItem.ModeEnum;
    /**
    * The current state of the object
    */
    'state': AssetTagListItem.StateEnum;
    'asset': IdName;
    'fields': { [key: string]: object; };

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "IdName"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "serialNumber",
            "baseName": "serialNumber",
            "type": "string"
        },
        {
            "name": "assetTagType",
            "baseName": "assetTagType",
            "type": "IdName"
        },
        {
            "name": "mode",
            "baseName": "mode",
            "type": "AssetTagListItem.ModeEnum"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "AssetTagListItem.StateEnum"
        },
        {
            "name": "asset",
            "baseName": "asset",
            "type": "IdName"
        },
        {
            "name": "fields",
            "baseName": "fields",
            "type": "{ [key: string]: object; }"
        }    ];

    static getAttributeTypeMap() {
        return AssetTagListItem.attributeTypeMap;
    }
}

export namespace AssetTagListItem {
    export enum ModeEnum {
        Movable = <any> 'movable',
        Fixed = <any> 'fixed',
        Stock = <any> 'stock'
    }
    export enum StateEnum {
        Active = <any> 'active',
        Deleted = <any> 'deleted'
    }
}
