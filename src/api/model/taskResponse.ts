/**
 * Fleet API Specification
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * The version of the OpenAPI document: 2.2.8
 * Contact: support@keytelematics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IdName } from './idName';
import { IdNameType } from './idNameType';
import { TaskDates } from './taskDates';
import { TaskOptions } from './taskOptions';

export class TaskResponse {
    /**
    * A unique GUID for the task
    */
    'id': string;
    'owner': IdNameType;
    'user'?: IdName;
    /**
    * A number of entities that are linked to this task
    */
    'linked': Array<IdNameType>;
    'options': TaskOptions;
    /**
    * The state of the task
    */
    'state': TaskResponse.StateEnum;
    'date': TaskDates;
    /**
    * The type of the task
    */
    'type': string;
    'data': { [key: string]: object; };
    'results'?: { [key: string]: object; };

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "IdNameType"
        },
        {
            "name": "user",
            "baseName": "user",
            "type": "IdName"
        },
        {
            "name": "linked",
            "baseName": "linked",
            "type": "Array<IdNameType>"
        },
        {
            "name": "options",
            "baseName": "options",
            "type": "TaskOptions"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "TaskResponse.StateEnum"
        },
        {
            "name": "date",
            "baseName": "date",
            "type": "TaskDates"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        },
        {
            "name": "data",
            "baseName": "data",
            "type": "{ [key: string]: object; }"
        },
        {
            "name": "results",
            "baseName": "results",
            "type": "{ [key: string]: object; }"
        }    ];

    static getAttributeTypeMap() {
        return TaskResponse.attributeTypeMap;
    }
}

export namespace TaskResponse {
    export enum StateEnum {
        Pending = <any> 'pending',
        Executing = <any> 'executing',
        Waiting = <any> 'waiting',
        Success = <any> 'success',
        Canceling = <any> 'canceling',
        Canceled = <any> 'canceled',
        Failed = <any> 'failed',
        Timedout = <any> 'timedout',
        Deferred = <any> 'deferred'
    }
}
