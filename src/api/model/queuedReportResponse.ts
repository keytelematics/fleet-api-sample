/**
 * Fleet API Specification
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * The version of the OpenAPI document: 2.2.8
 * Contact: support@keytelematics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IdName } from './idName';
import { IdNameType } from './idNameType';
import { ReportConfig } from './reportConfig';

export class QueuedReportResponse {
    /**
    * The unique ID of this report definition
    */
    'id': string;
    'owner': IdNameType;
    'user': IdName;
    'client': IdName;
    /**
    * The base report name
    */
    'name': string;
    /**
    * The report title as set by the user
    */
    'title': string;
    /**
    * The reporting subsystem that generates this report
    */
    'source': QueuedReportResponse.SourceEnum;
    /**
    * The status of this report
    */
    'status': QueuedReportResponse.StatusEnum;
    /**
    * The ISO date/time that this report was queued
    */
    'queueDate': string;
    /**
    * The ISO date/time that this report\'s state last changed
    */
    'updateDate': string;
    /**
    * The output format for this report
    */
    'outputFormat': QueuedReportResponse.OutputFormatEnum;
    /**
    * The progress percentage of this report
    */
    'progress': number;
    /**
    * report queue order, will change sometimes while queued
    */
    'order': number;
    /**
    * The report priority: 0 = urgent, 1 = high, 2 = normal, 3 = low, 4+ = none (sorted as an integer)
    */
    'priority': number;
    'config': ReportConfig;
    /**
    * What triggered the report
    */
    'triggeredBy': QueuedReportResponse.TriggeredByEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "IdNameType"
        },
        {
            "name": "user",
            "baseName": "user",
            "type": "IdName"
        },
        {
            "name": "client",
            "baseName": "client",
            "type": "IdName"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "QueuedReportResponse.SourceEnum"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "QueuedReportResponse.StatusEnum"
        },
        {
            "name": "queueDate",
            "baseName": "queueDate",
            "type": "string"
        },
        {
            "name": "updateDate",
            "baseName": "updateDate",
            "type": "string"
        },
        {
            "name": "outputFormat",
            "baseName": "outputFormat",
            "type": "QueuedReportResponse.OutputFormatEnum"
        },
        {
            "name": "progress",
            "baseName": "progress",
            "type": "number"
        },
        {
            "name": "order",
            "baseName": "order",
            "type": "number"
        },
        {
            "name": "priority",
            "baseName": "priority",
            "type": "number"
        },
        {
            "name": "config",
            "baseName": "config",
            "type": "ReportConfig"
        },
        {
            "name": "triggeredBy",
            "baseName": "triggeredBy",
            "type": "QueuedReportResponse.TriggeredByEnum"
        }    ];

    static getAttributeTypeMap() {
        return QueuedReportResponse.attributeTypeMap;
    }
}

export namespace QueuedReportResponse {
    export enum SourceEnum {
        Dataset = <any> 'dataset',
        Analytics = <any> 'analytics'
    }
    export enum StatusEnum {
        Queued = <any> 'queued',
        Running = <any> 'running',
        Completed = <any> 'completed',
        Aborted = <any> 'aborted',
        Failed = <any> 'failed',
        Retry = <any> 'retry'
    }
    export enum OutputFormatEnum {
        Pdf = <any> 'pdf',
        Xlsx = <any> 'xlsx',
        Xml = <any> 'xml',
        Csv = <any> 'csv',
        Raw = <any> 'raw',
        Json = <any> 'json'
    }
    export enum TriggeredByEnum {
        User = <any> 'user',
        Schedule = <any> 'schedule',
        Dashboard = <any> 'dashboard'
    }
}
