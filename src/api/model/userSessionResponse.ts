/**
 * Fleet API Specification
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * The version of the OpenAPI document: 2.2.8
 * Contact: support@keytelematics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AuthUserResponse } from './authUserResponse';

export class UserSessionResponse {
    /**
    * The JWT token is represented as a JSON Web Token (JWT). The token contains claims about the identity of the authenticated user. Additional information is also included in this token such as the default client id and user\'s full name and surname. The id token expires one hour after the user authenticates. You should not process the access token in your client or web API after it has expired.
    */
    'idToken': string;
    /**
    * The JWT token is represented as a JSON Web Token (JWT). The token contains claims about the identity of the authenticated user. The access token expires one hour after the user authenticates. You should not process the access token in your client or web API after it has expired.
    */
    'accessToken': string;
    /**
    * The JWT token is represented as a JSON Web Token (JWT). The token can be used to refresh a user\'s access and id tokens. The access token expires one hour after the user authenticates and the refresh token is valid for 30 days. You should not process the access token in your client or web API after it has expired.
    */
    'refreshToken': string;
    /**
    * An array of users that match the authentication information
    */
    'users': Array<AuthUserResponse>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "idToken",
            "baseName": "idToken",
            "type": "string"
        },
        {
            "name": "accessToken",
            "baseName": "accessToken",
            "type": "string"
        },
        {
            "name": "refreshToken",
            "baseName": "refreshToken",
            "type": "string"
        },
        {
            "name": "users",
            "baseName": "users",
            "type": "Array<AuthUserResponse>"
        }    ];

    static getAttributeTypeMap() {
        return UserSessionResponse.attributeTypeMap;
    }
}

