/**
 * Fleet API Specification
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * The version of the OpenAPI document: 2.2.8
 * Contact: support@keytelematics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IdName } from './idName';
import { IdNameType } from './idNameType';
import { TripLocation } from './tripLocation';
import { TripRating } from './tripRating';
import { TripStats } from './tripStats';

export class TripResponse {
    /**
    * Unique id for this trip
    */
    'id': string;
    'asset': IdName;
    'assetType': IdName;
    /**
    * The type of this trip
    */
    'tripType': TripResponse.TripTypeEnum;
    /**
    * The ISO8601 UTC date that the trip was started
    */
    'dateStart': string;
    /**
    * The ISO8601 UTC date that the trip was ended
    */
    'dateEnd': string;
    'start': TripLocation;
    'end': TripLocation;
    'stats': TripStats;
    'rating'?: TripRating;
    /**
    * The number of telemetry records that comprised this trip
    */
    'records': number;
    /**
    * Any other assets that were linked to this trip
    */
    'linkedAssets': Array<IdNameType>;
    'maxes': { [key: string]: number; };

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "asset",
            "baseName": "asset",
            "type": "IdName"
        },
        {
            "name": "assetType",
            "baseName": "assetType",
            "type": "IdName"
        },
        {
            "name": "tripType",
            "baseName": "tripType",
            "type": "TripResponse.TripTypeEnum"
        },
        {
            "name": "dateStart",
            "baseName": "dateStart",
            "type": "string"
        },
        {
            "name": "dateEnd",
            "baseName": "dateEnd",
            "type": "string"
        },
        {
            "name": "start",
            "baseName": "start",
            "type": "TripLocation"
        },
        {
            "name": "end",
            "baseName": "end",
            "type": "TripLocation"
        },
        {
            "name": "stats",
            "baseName": "stats",
            "type": "TripStats"
        },
        {
            "name": "rating",
            "baseName": "rating",
            "type": "TripRating"
        },
        {
            "name": "records",
            "baseName": "records",
            "type": "number"
        },
        {
            "name": "linkedAssets",
            "baseName": "linkedAssets",
            "type": "Array<IdNameType>"
        },
        {
            "name": "maxes",
            "baseName": "maxes",
            "type": "{ [key: string]: number; }"
        }    ];

    static getAttributeTypeMap() {
        return TripResponse.attributeTypeMap;
    }
}

export namespace TripResponse {
    export enum TripTypeEnum {
        Inactive = <any> 'inactive',
        Active = <any> 'active',
        Mixed = <any> 'mixed'
    }
}
