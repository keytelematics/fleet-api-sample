/**
 * Fleet API Specification
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * The version of the OpenAPI document: 2.2.8
 * Contact: support@keytelematics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class ClientMeasurementUnits {
    'distanceUnit'?: ClientMeasurementUnits.DistanceUnitEnum;
    'altitudeUnit'?: ClientMeasurementUnits.AltitudeUnitEnum;
    'speedUnit'?: ClientMeasurementUnits.SpeedUnitEnum;
    'areaUnit'?: ClientMeasurementUnits.AreaUnitEnum;
    'volumeUnit'?: ClientMeasurementUnits.VolumeUnitEnum;
    'weightUnit'?: ClientMeasurementUnits.WeightUnitEnum;
    'timeUnit'?: ClientMeasurementUnits.TimeUnitEnum;
    'dateUnit'?: ClientMeasurementUnits.DateUnitEnum;
    'temperatureUnit'?: ClientMeasurementUnits.TemperatureUnitEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "distanceUnit",
            "baseName": "distanceUnit",
            "type": "ClientMeasurementUnits.DistanceUnitEnum"
        },
        {
            "name": "altitudeUnit",
            "baseName": "altitudeUnit",
            "type": "ClientMeasurementUnits.AltitudeUnitEnum"
        },
        {
            "name": "speedUnit",
            "baseName": "speedUnit",
            "type": "ClientMeasurementUnits.SpeedUnitEnum"
        },
        {
            "name": "areaUnit",
            "baseName": "areaUnit",
            "type": "ClientMeasurementUnits.AreaUnitEnum"
        },
        {
            "name": "volumeUnit",
            "baseName": "volumeUnit",
            "type": "ClientMeasurementUnits.VolumeUnitEnum"
        },
        {
            "name": "weightUnit",
            "baseName": "weightUnit",
            "type": "ClientMeasurementUnits.WeightUnitEnum"
        },
        {
            "name": "timeUnit",
            "baseName": "timeUnit",
            "type": "ClientMeasurementUnits.TimeUnitEnum"
        },
        {
            "name": "dateUnit",
            "baseName": "dateUnit",
            "type": "ClientMeasurementUnits.DateUnitEnum"
        },
        {
            "name": "temperatureUnit",
            "baseName": "temperatureUnit",
            "type": "ClientMeasurementUnits.TemperatureUnitEnum"
        }    ];

    static getAttributeTypeMap() {
        return ClientMeasurementUnits.attributeTypeMap;
    }
}

export namespace ClientMeasurementUnits {
    export enum DistanceUnitEnum {
        Kilometres = <any> 'kilometres',
        Metres = <any> 'metres',
        Feet = <any> 'feet',
        Inches = <any> 'inches',
        Miles = <any> 'miles',
        NauticalMiles = <any> 'nauticalMiles',
        Yards = <any> 'yards'
    }
    export enum AltitudeUnitEnum {
        Metres = <any> 'metres',
        Kilometres = <any> 'kilometres',
        Feet = <any> 'feet',
        Inches = <any> 'inches',
        Miles = <any> 'miles',
        NauticalMiles = <any> 'nauticalMiles',
        Yards = <any> 'yards'
    }
    export enum SpeedUnitEnum {
        KilometresPerHour = <any> 'kilometresPerHour',
        MetresPerSecond = <any> 'metresPerSecond',
        MilesPerHour = <any> 'milesPerHour',
        Knots = <any> 'knots'
    }
    export enum AreaUnitEnum {
        SquareKilometres = <any> 'squareKilometres',
        Acres = <any> 'acres',
        Hectares = <any> 'hectares',
        SquareFeet = <any> 'squareFeet',
        Squaremetres = <any> 'squaremetres',
        SquareInches = <any> 'squareInches',
        SquareMiles = <any> 'squareMiles',
        SquareYards = <any> 'squareYards'
    }
    export enum VolumeUnitEnum {
        Litres = <any> 'litres',
        Cubicmetres = <any> 'cubicmetres',
        CubicFeet = <any> 'cubicFeet',
        Gallons = <any> 'gallons',
        Ounces = <any> 'ounces',
        GallonsUs = <any> 'gallonsUs',
        OuncesUs = <any> 'ouncesUs'
    }
    export enum WeightUnitEnum {
        Kilograms = <any> 'kilograms',
        Ounces = <any> 'ounces',
        Pounds = <any> 'pounds',
        Tonnes = <any> 'tonnes'
    }
    export enum TimeUnitEnum {
        HHmmss = <any> 'HHmmss',
        Hmmss = <any> 'Hmmss',
        Hmmssa = <any> 'hmmssa'
    }
    export enum DateUnitEnum {
        Yyyymmdd1 = <any> 'yyyymmdd1',
        Yyyymmdd2 = <any> 'yyyymmdd2',
        Yyyymmdd3 = <any> 'yyyymmdd3',
        Ddmmyyyy1 = <any> 'ddmmyyyy1',
        Ddmmyyyy2 = <any> 'ddmmyyyy2',
        Ddmmyyyy3 = <any> 'ddmmyyyy3',
        Dmyyyy1 = <any> 'dmyyyy1',
        Dmyyyy2 = <any> 'dmyyyy2',
        Dmyyyy3 = <any> 'dmyyyy3',
        Mmddyyyy1 = <any> 'mmddyyyy1',
        Mdyyyy1 = <any> 'mdyyyy1'
    }
    export enum TemperatureUnitEnum {
        Celsius = <any> 'celsius',
        Fahrenheit = <any> 'fahrenheit'
    }
}
