/**
 * Fleet API Specification
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * The version of the OpenAPI document: 2.2.8
 * Contact: support@keytelematics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IdNameType } from './idNameType';
import { ReminderReset } from './reminderReset';
import { ReminderTriggerValue } from './reminderTriggerValue';

export class ReminderListItem {
    /**
    * The unique UUID of this entity
    */
    'id': string;
    'owner': IdNameType;
    /**
    * A unique name for this reminder
    */
    'name'?: string | null;
    'target'?: IdNameType;
    /**
    * Specify the trigger type of the reminder, which can be either time, odometer or engine hours.
    */
    'type'?: ReminderListItem.TypeEnum;
    /**
    * The reminder mode. If set to once, the reminder will be disabled as soon as it has triggered at least once.
    */
    'mode'?: ReminderListItem.ModeEnum;
    /**
    * The timezone to use for time based triggers.
    */
    'timeZoneId'?: string | null;
    'trigger'?: ReminderTriggerValue;
    'reset'?: ReminderReset;
    /**
    * Whether the reminder is still enabled (will be false for reminders with mode set to `once` that have already triggered.
    */
    'enabled'?: boolean | null;
    /**
    * The date the entity was last modified
    */
    'modifiedDate': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "IdNameType"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "target",
            "baseName": "target",
            "type": "IdNameType"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ReminderListItem.TypeEnum"
        },
        {
            "name": "mode",
            "baseName": "mode",
            "type": "ReminderListItem.ModeEnum"
        },
        {
            "name": "timeZoneId",
            "baseName": "timeZoneId",
            "type": "string"
        },
        {
            "name": "trigger",
            "baseName": "trigger",
            "type": "ReminderTriggerValue"
        },
        {
            "name": "reset",
            "baseName": "reset",
            "type": "ReminderReset"
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean"
        },
        {
            "name": "modifiedDate",
            "baseName": "modifiedDate",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ReminderListItem.attributeTypeMap;
    }
}

export namespace ReminderListItem {
    export enum TypeEnum {
        Odo = <any> 'odo',
        Hours = <any> 'hours',
        Time = <any> 'time'
    }
    export enum ModeEnum {
        Once = <any> 'once',
        Repeating = <any> 'repeating'
    }
}
