/**
 * Fleet API Specification
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * The version of the OpenAPI document: 2.2.8
 * Contact: support@keytelematics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Contacts can be assigned to assets and will be displayed along side any asset related information.
*/
export class Contact {
    /**
    * A unique id for this contact
    */
    'id': string;
    /**
    * The type of contact
    */
    'type': Contact.TypeEnum;
    /**
    * The name of the contact person or company
    */
    'name': string;
    /**
    * The contact person\'s email address
    */
    'emailAddress'?: string | null;
    /**
    * The mobile phone number of the contact
    */
    'phoneMobile'?: string | null;
    /**
    * An optional office number for the contact
    */
    'phoneOffice'?: string | null;
    /**
    * Any notes regarding this contact
    */
    'notes'?: string | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "Contact.TypeEnum"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "emailAddress",
            "baseName": "emailAddress",
            "type": "string"
        },
        {
            "name": "phoneMobile",
            "baseName": "phoneMobile",
            "type": "string"
        },
        {
            "name": "phoneOffice",
            "baseName": "phoneOffice",
            "type": "string"
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Contact.attributeTypeMap;
    }
}

export namespace Contact {
    export enum TypeEnum {
        Emergency = <any> 'emergency',
        Administrative = <any> 'administrative',
        Technical = <any> 'technical',
        Operational = <any> 'operational',
        Management = <any> 'management',
        Owner = <any> 'owner'
    }
}
