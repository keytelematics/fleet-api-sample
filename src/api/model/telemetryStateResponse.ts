/**
 * Fleet API Specification
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * The version of the OpenAPI document: 2.2.8
 * Contact: support@keytelematics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IdName } from './idName';
import { IdNameType } from './idNameType';
import { SpeedLimits } from './speedLimits';
import { TelemetryIOValue } from './telemetryIOValue';
import { TelemetryLocation } from './telemetryLocation';
import { TelemetryState } from './telemetryState';
import { TelemetryTrip } from './telemetryTrip';

export class TelemetryStateResponse {
    'origin'?: IdName;
    /**
    * The ISO8601 UTC date that the message was generated by the device
    */
    'date': string;
    /**
    * The ISO8601 UTC date that the message was received by the system
    */
    'received': string;
    /**
    * True if the device is in an active state
    */
    'active': boolean;
    /**
    * A list of assets linked to this telemetry message
    */
    'linked': Array<IdNameType>;
    /**
    * A list of zones which are relevant to this location
    */
    'zones': Array<IdNameType>;
    /**
    * A list of routes which are relevant to this location
    */
    'routes': Array<IdName>;
    'state': { [key: string]: TelemetryState; };
    'spd'?: SpeedLimits;
    'location': TelemetryLocation;
    'telemetry': { [key: string]: object; };
    'counters': { [key: string]: number; };
    'io': { [key: string]: TelemetryIOValue; };
    'meta'?: { [key: string]: object; };
    'object'?: IdNameType;
    'trip'?: TelemetryTrip;
    /**
    * The last time that the asset moved.
    */
    'lastMovement'?: string | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "origin",
            "baseName": "origin",
            "type": "IdName"
        },
        {
            "name": "date",
            "baseName": "date",
            "type": "string"
        },
        {
            "name": "received",
            "baseName": "received",
            "type": "string"
        },
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean"
        },
        {
            "name": "linked",
            "baseName": "linked",
            "type": "Array<IdNameType>"
        },
        {
            "name": "zones",
            "baseName": "zones",
            "type": "Array<IdNameType>"
        },
        {
            "name": "routes",
            "baseName": "routes",
            "type": "Array<IdName>"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "{ [key: string]: TelemetryState; }"
        },
        {
            "name": "spd",
            "baseName": "spd",
            "type": "SpeedLimits"
        },
        {
            "name": "location",
            "baseName": "location",
            "type": "TelemetryLocation"
        },
        {
            "name": "telemetry",
            "baseName": "telemetry",
            "type": "{ [key: string]: object; }"
        },
        {
            "name": "counters",
            "baseName": "counters",
            "type": "{ [key: string]: number; }"
        },
        {
            "name": "io",
            "baseName": "io",
            "type": "{ [key: string]: TelemetryIOValue; }"
        },
        {
            "name": "meta",
            "baseName": "meta",
            "type": "{ [key: string]: object; }"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "IdNameType"
        },
        {
            "name": "trip",
            "baseName": "trip",
            "type": "TelemetryTrip"
        },
        {
            "name": "lastMovement",
            "baseName": "lastMovement",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return TelemetryStateResponse.attributeTypeMap;
    }
}

