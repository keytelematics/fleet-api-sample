/**
 * Fleet API Specification
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * The version of the OpenAPI document: 2.2.8
 * Contact: support@keytelematics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { EventComment } from './eventComment';
import { EventHandled } from './eventHandled';
import { EventMedia } from './eventMedia';
import { IdName } from './idName';
import { IdNameType } from './idNameType';

export class EventResponse {
    /**
    * The unique ID for the event
    */
    'id': string;
    'owner': IdNameType;
    'origin': IdNameType;
    /**
    * Assets and devices that are linked to this event
    */
    'linked': Array<IdNameType>;
    /**
    * Any alerts this event may have triggered
    */
    'alerts': Array<IdNameType>;
    /**
    * Users that were notified of this event
    */
    'notify': Array<IdName>;
    /**
    * Media that\'s linked to this event
    */
    'media': Array<EventMedia>;
    /**
    * The UTC date of the event as recorded by the device that triggered it
    */
    'eventDate': string;
    /**
    * The UTC date when the evetn was created in the system
    */
    'creationDate': string;
    /**
    * The UTC date when this event was last modified
    */
    'modifiedDate': string;
    /**
    * The class of the event
    */
    'eventClass': string;
    /**
    * The type of event in the given class
    */
    'eventType': string;
    'handledBy'?: EventHandled;
    /**
    * List of comments that users have left on this event
    */
    'comments': Array<EventComment>;
    'details': { [key: string]: object; };

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "IdNameType"
        },
        {
            "name": "origin",
            "baseName": "origin",
            "type": "IdNameType"
        },
        {
            "name": "linked",
            "baseName": "linked",
            "type": "Array<IdNameType>"
        },
        {
            "name": "alerts",
            "baseName": "alerts",
            "type": "Array<IdNameType>"
        },
        {
            "name": "notify",
            "baseName": "notify",
            "type": "Array<IdName>"
        },
        {
            "name": "media",
            "baseName": "media",
            "type": "Array<EventMedia>"
        },
        {
            "name": "eventDate",
            "baseName": "eventDate",
            "type": "string"
        },
        {
            "name": "creationDate",
            "baseName": "creationDate",
            "type": "string"
        },
        {
            "name": "modifiedDate",
            "baseName": "modifiedDate",
            "type": "string"
        },
        {
            "name": "eventClass",
            "baseName": "eventClass",
            "type": "string"
        },
        {
            "name": "eventType",
            "baseName": "eventType",
            "type": "string"
        },
        {
            "name": "handledBy",
            "baseName": "handledBy",
            "type": "EventHandled"
        },
        {
            "name": "comments",
            "baseName": "comments",
            "type": "Array<EventComment>"
        },
        {
            "name": "details",
            "baseName": "details",
            "type": "{ [key: string]: object; }"
        }    ];

    static getAttributeTypeMap() {
        return EventResponse.attributeTypeMap;
    }
}

