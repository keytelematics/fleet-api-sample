/**
 * Fleet API Specification
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * The version of the OpenAPI document: 2.2.8
 * Contact: support@keytelematics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AnalyticsOutputFilters } from './analyticsOutputFilters';
import { AnalyticsSortOptions } from './analyticsSortOptions';

export class AnalyticsOutputRequest {
    'rowLevel': number;
    'groupLevel': number;
    'time': string;
    'flipped': boolean;
    'measures': Array<string>;
    'sort': AnalyticsSortOptions;
    'row'?: AnalyticsOutputRequest.RowEnum;
    'group'?: AnalyticsOutputRequest.GroupEnum;
    'filters'?: AnalyticsOutputFilters;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "rowLevel",
            "baseName": "rowLevel",
            "type": "number"
        },
        {
            "name": "groupLevel",
            "baseName": "groupLevel",
            "type": "number"
        },
        {
            "name": "time",
            "baseName": "time",
            "type": "string"
        },
        {
            "name": "flipped",
            "baseName": "flipped",
            "type": "boolean"
        },
        {
            "name": "measures",
            "baseName": "measures",
            "type": "Array<string>"
        },
        {
            "name": "sort",
            "baseName": "sort",
            "type": "AnalyticsSortOptions"
        },
        {
            "name": "row",
            "baseName": "row",
            "type": "AnalyticsOutputRequest.RowEnum"
        },
        {
            "name": "group",
            "baseName": "group",
            "type": "AnalyticsOutputRequest.GroupEnum"
        },
        {
            "name": "filters",
            "baseName": "filters",
            "type": "AnalyticsOutputFilters"
        }    ];

    static getAttributeTypeMap() {
        return AnalyticsOutputRequest.attributeTypeMap;
    }
}

export namespace AnalyticsOutputRequest {
    export enum RowEnum {
        Time = <any> 'time',
        Asset = <any> 'asset',
        CostCentre = <any> 'costCentre',
        ZoneCostCentre = <any> 'zoneCostCentre',
        AssetGroup = <any> 'assetGroup',
        ZoneGroup = <any> 'zoneGroup',
        Device = <any> 'device',
        IoType = <any> 'ioType',
        Alert = <any> 'alert',
        Event = <any> 'event',
        AssetState = <any> 'assetState',
        AssetCategory0 = <any> 'assetCategory0',
        AssetCategory1 = <any> 'assetCategory1',
        AssetCategory2 = <any> 'assetCategory2',
        AssetCategory3 = <any> 'assetCategory3',
        AssetCategory4 = <any> 'assetCategory4',
        Overspeed = <any> 'overspeed',
        Shift = <any> 'shift',
        Company = <any> 'company',
        Geography = <any> 'geography',
        DeviceType = <any> 'deviceType'
    }
    export enum GroupEnum {
        Time = <any> 'time',
        Asset = <any> 'asset',
        CostCentre = <any> 'costCentre',
        ZoneCostCentre = <any> 'zoneCostCentre',
        AssetGroup = <any> 'assetGroup',
        ZoneGroup = <any> 'zoneGroup',
        Device = <any> 'device',
        IoType = <any> 'ioType',
        Alert = <any> 'alert',
        Event = <any> 'event',
        AssetState = <any> 'assetState',
        AssetCategory0 = <any> 'assetCategory0',
        AssetCategory1 = <any> 'assetCategory1',
        AssetCategory2 = <any> 'assetCategory2',
        AssetCategory3 = <any> 'assetCategory3',
        AssetCategory4 = <any> 'assetCategory4',
        Overspeed = <any> 'overspeed',
        Shift = <any> 'shift',
        Company = <any> 'company',
        Geography = <any> 'geography',
        DeviceType = <any> 'deviceType'
    }
}
