/**
 * Fleet API Specification
 * Welcome to the Key Telematics Fleet API specification. This document outlines the REST routes and data structures returned by the  API and offers examples of usage.  The API publishes a [swagger](https://swagger.io/) specification that can be used to [generate a client library](https://github.com/swagger-api/swagger-codegen) for your language of choice.   The latest swagger file is available for download from the following link: [https://api.eu1.kt1.io/fleet/v2/swagger.json](https://api.eu1.kt1.io/fleet/v2/swagger.json)
 *
 * The version of the OpenAPI document: 2.2.8
 * Contact: support@keytelematics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class EmailServerConfiguration {
    'smtpEnabled'?: boolean | null;
    'smtpServer'?: string | null;
    'smtpPort'?: number | null;
    'fromAddress'?: string | null;
    'fromName'?: string | null;
    'username'?: string | null;
    'password'?: string | null;
    'enableSsl'?: boolean | null;
    'state'?: EmailServerConfiguration.StateEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "smtpEnabled",
            "baseName": "smtpEnabled",
            "type": "boolean"
        },
        {
            "name": "smtpServer",
            "baseName": "smtpServer",
            "type": "string"
        },
        {
            "name": "smtpPort",
            "baseName": "smtpPort",
            "type": "number"
        },
        {
            "name": "fromAddress",
            "baseName": "fromAddress",
            "type": "string"
        },
        {
            "name": "fromName",
            "baseName": "fromName",
            "type": "string"
        },
        {
            "name": "username",
            "baseName": "username",
            "type": "string"
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "string"
        },
        {
            "name": "enableSsl",
            "baseName": "enableSsl",
            "type": "boolean"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "EmailServerConfiguration.StateEnum"
        }    ];

    static getAttributeTypeMap() {
        return EmailServerConfiguration.attributeTypeMap;
    }
}

export namespace EmailServerConfiguration {
    export enum StateEnum {
        Active = <any> 'active',
        Suspended = <any> 'suspended'
    }
}
